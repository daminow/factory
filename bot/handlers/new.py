import re
from aiogram import types, Dispatcher
from celery import uuid
from workers.tasks import generate_creative
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


URL_REGEX = re.compile(r"https?://[\w./?=&-]+")


async def cmd_new(message: types.Message):
    args = message.get_args()
    if not args or not URL_REGEX.match(args):
        return await message.reply("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL: /new <URL>")
    task_id = uuid()
    generate_creative.apply_async(
        (args, "RU", ["vk", "tiktok", "instagram", "telegram"]), task_id=task_id
    )
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=f"approve:{task_id}"),
        InlineKeyboardButton("üóìÔ∏è –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"schedule:{task_id}"),
    )
    kb.add(
        InlineKeyboardButton("üè† –ú–µ–Ω—é", callback_data="menu:home"),
    )
    await message.reply(
        f"üß© –ó–∞–¥–∞—á–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç–∞. ID: {task_id}. –ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /approve {task_id} –∏–ª–∏ /schedule {task_id} DD.MM HH:MM",
        reply_markup=kb,
    )


def register(dp: Dispatcher):
    dp.register_message_handler(cmd_new, commands=["new"])